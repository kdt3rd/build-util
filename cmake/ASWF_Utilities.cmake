#
#  Copyright 2018 Kimball Thurston
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

####### Misc utility functions

# Used to set the api version used in namespace versioning
macro(ASWF_SET_API_VERSION _proj _ver_maj _ver_min)
  set(${_proj}_VERSION_API ${_ver_maj}_${_ver_min})
  set(${_proj}_LIBSUFFIX "-${${_proj}_VERSION_API}")
endmacro(ASWF_SET_API_VERSION)

# Used to set the dso version used in producing shared libraries
macro(ASWF_SET_SO_VERSION _proj _ver)
  set(${_proj}_SOVERSION ${_ver})
endmacro(ASWF_SET_SO_VERSION)

# retrieve a target property, with a default if the property has
# not been set
#
# This was based on a sample macro found on the Kitware wiki
macro(ASWF_GET_TARGET_PROPERTY_WITH_DEFAULT _var _target _property _def_value)
  get_target_property(${_var} ${_target} ${_property})
  if (${_var} MATCHES NOTFOUND)
    set(${_var} ${_def_value})
  endif()
endmacro(ASWF_GET_TARGET_PROPERTY_WITH_DEFAULT)

# This was based on a sample macro found on the Kitware wiki but
# has added support for the libsuffix, etc.
macro(ASWF_CREATE_LIBTOOL_FILE _target _install_DIR)
  #set(_target_location $<TARGET_FILE:${_target}>)

  aswf_get_target_property_with_default(_target_static_lib ${_target} STATIC_LIB "")
  aswf_get_target_property_with_default(_target_dependency_libs ${_target} LT_DEPENDENCY_LIBS "")
  aswf_get_target_property_with_default(_target_current ${_target} LT_VERSION_CURRENT 0)
  aswf_get_target_property_with_default(_target_age ${_target} LT_VERSION_AGE 0)
  aswf_get_target_property_with_default(_target_revision ${_target} LT_VERSION_REVISION 0)
  aswf_get_target_property_with_default(_target_installed ${_target} LT_INSTALLED yes)
  aswf_get_target_property_with_default(_target_shouldnotlink ${_target} LT_SHOULDNOTLINK yes)
  aswf_get_target_property_with_default(_target_dlopen ${_target} LT_DLOPEN "")
  aswf_get_target_property_with_default(_target_dlpreopen ${_target} LT_DLPREOPEN "")
  set(_laname ${_target}${ASWF_LIBSUFFIX})
  set(_soname ${_laname})
  set(_laname ${PROJECT_BINARY_DIR}/${_laname}.la)

  file(WRITE ${_laname} "# ${_laname} - a libtool library file\n")
  file(APPEND ${_laname} "# Generated by CMake ${CMAKE_VERSION} (like GNU libtool)\n")
  file(APPEND ${_laname} "\n# Please DO NOT delete this file!\n# It is necessary for linking the library with libtool.\n\n" )
  file(APPEND ${_laname} "# The name that we can dlopen(3).\n")
  file(APPEND ${_laname} "dlname='${_soname}'\n\n")
  file(APPEND ${_laname} "# Names of this library.\n")
  file(APPEND ${_laname} "library_names='${_soname}.${_target_current}.${_target_age}.${_target_revision} ${_soname}.${_target_current} ${_soname}'\n\n")
  file(APPEND ${_laname} "# The name of the static archive.\n")
  file(APPEND ${_laname} "old_library='${_target_static_lib}'\n\n")
  file(APPEND ${_laname} "# Libraries that this one depends upon.\n")
  file(APPEND ${_laname} "dependency_libs='${_target_dependency_libs}'\n\n")
  file(APPEND ${_laname} "# Names of additional weak libraries provided by this library\n")
  file(APPEND ${_laname} "weak_library_names=\n\n")
  file(APPEND ${_laname} "# Version information for ${_laname}.\n")
  file(APPEND ${_laname} "current=${_target_current}\n")
  file(APPEND ${_laname} "age=${_target_age}\n")
  file(APPEND ${_laname} "revision=${_target_revision}\n\n")
  file(APPEND ${_laname} "# Is this an already installed library?\n")
  file(APPEND ${_laname} "installed=${_target_installed}\n\n")
  file(APPEND ${_laname} "# Should we warn about portability when linking against -modules?\n")
  file(APPEND ${_laname} "shouldnotlink=${_target_shouldnotlink}\n\n")
  file(APPEND ${_laname} "# Files to dlopen/dlpreopen\n")
  file(APPEND ${_laname} "dlopen='${_target_dlopen}'\n")
  file(APPEND ${_laname} "dlpreopen='${_target_dlpreopen}'\n\n")
  file(APPEND ${_laname} "# Directory that this library needs to be installed in:\n")
  file(APPEND ${_laname} "libdir='${CMAKE_INSTALL_PREFIX}${_install_DIR}'\n")
  install( FILES ${_laname} DESTINATION ${CMAKE_INSTALL_PREFIX}${_install_DIR})

  unset(_soname)
  unset(_laname)
endmacro(ASWF_CREATE_LIBTOOL_FILE)
